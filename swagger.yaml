openapi: 3.0.3
info:
  title: Migration Project API
  version: 1.0.0
  description: Node.js/Express/MySQL API for user and post management.
servers:
  - url: http://localhost:3000
    description: Local development server
paths:
  /ping:
    get:
      summary: Ping database
      description: Health check endpoint to test database connectivity.
      responses:
        "200":
          description: Ping success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  time:
                    type: string
                    format: date-time
        "500":
          description: Internal server error
  /users:
    get:
      summary: Get all users
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseUsers"
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseId"
        "400":
          description: Missing required fields
  /users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseUser"
        "404":
          description: User not found
    put:
      summary: Update user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseId"
        "404":
          description: User not found
    delete:
      summary: Delete user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseId"
        "404":
          description: User not found
  /posts:
    get:
      summary: Get all posts (paginated)
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: List of posts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponsePostsPaginated"
    post:
      summary: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCreate"
      responses:
        "201":
          description: Post created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseId"
        "400":
          description: Missing required fields
  /posts/{id}:
    get:
      summary: Get post by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Post found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponsePost"
        "404":
          description: Post not found
    put:
      summary: Update post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostUpdate"
      responses:
        "200":
          description: Post updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseId"
        "404":
          description: Post not found
    delete:
      summary: Delete post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Post deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseId"
        "404":
          description: Post not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date-time
    UserCreate:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
        email:
          type: string
    UserUpdate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    Post:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        title:
          type: string
        content:
          type: string
        created_at:
          type: string
          format: date-time
    PostCreate:
      type: object
      required:
        - user_id
        - title
        - content
      properties:
        user_id:
          type: integer
        title:
          type: string
        content:
          type: string
    PostUpdate:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
    ApiResponseId:
      type: object
      properties:
        message:
          type: string
        data:
          type: object
          properties:
            id:
              type: integer
        error:
          type: string
          nullable: true
    ApiResponseUser:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: "#/components/schemas/User"
        error:
          type: string
          nullable: true
    ApiResponseUsers:
      type: object
      properties:
        message:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/User"
        error:
          type: string
          nullable: true
    ApiResponsePost:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: "#/components/schemas/Post"
        error:
          type: string
          nullable: true
    ApiResponsePostsPaginated:
      type: object
      properties:
        message:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/Post"
        error:
          type: string
          nullable: true
        pagination:
          type: object
          properties:
            currentPage:
              type: integer
            totalPages:
              type: integer
            totalItems:
              type: integer
            itemsPerPage:
              type: integer
            hasNext:
              type: boolean
            hasPrevious:
              type: boolean
